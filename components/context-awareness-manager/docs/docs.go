/*
  COLMENA-DESCRIPTION-SERVICE
  Copyright Â© 2024 EVIDEN
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  
  This work has been implemented within the context of COLMENA project.
*/
// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Returns a welcome message",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "General"
                ],
                "summary": "Main welcome route",
                "responses": {
                    "200": {
                        "description": "Welcome",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/context": {
            "post": {
                "description": "Endpoint to receive and process Docker context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Context"
                ],
                "summary": "Receive context",
                "parameters": [
                    {
                        "description": "Context to process",
                        "name": "context",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Context"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Context processed successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Result"
                        }
                    },
                    "400": {
                        "description": "Invalid context",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Checks if the service is up and responding.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Check API health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Context": {
            "type": "object",
            "properties": {
                "dockerContextDefinitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DockerContextDefinition"
                    }
                },
                "dockerRoleDefinitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DockerRoleDefinition"
                    }
                },
                "id": {
                    "$ref": "#/definitions/models.ID"
                },
                "kpis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.KPI"
                    }
                }
            }
        },
        "models.DockerContextDefinition": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                }
            }
        },
        "models.DockerRoleDefinition": {
            "type": "object",
            "properties": {
                "hardwareRequirements": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "kpis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.KPI"
                    }
                }
            }
        },
        "models.ID": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "models.KPI": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Result": {
            "type": "object",
            "properties": {
                "classification": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "\"Type 'Bearer TOKEN' to correctly set the API Key\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Context Awareness Manager API",
	Description:      "This is the Context Awareness Manager service API for Docker context management.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
